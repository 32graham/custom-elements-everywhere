{
    "summary": {
        "success": 24,
        "failed": 6,
        "error": false,
        "disconnected": false,
        "exitCode": 1
    },
    "browsers": [
        {
            "browser": {
                "id": "12399977",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:54.0) Gecko/20100101 Firefox/54.0",
                "name": "Firefox 54.0.0 (Mac OS X 10.12.0)",
                "state": 5,
                "lastResult": {
                    "success": 12,
                    "failed": 3,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 2262,
                    "netTime": 545,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 21,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501704647789,
                    "endTime": 1501704647827
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 20,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501704648048,
                    "endTime": 1501704648078
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 84,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501704648087,
                    "endTime": 1501704648172
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 35,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501704648380,
                    "endTime": 1501704648419
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 7,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501704648433,
                    "endTime": 1501704648602
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501704648605,
                    "endTime": 1501704648610
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 2,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501704648614,
                    "endTime": 1501704648618
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 7,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501704648626,
                    "endTime": 1501704648636
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 165,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501704648638,
                    "endTime": 1501704648813
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 46,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501704648894,
                    "endTime": 1501704648940
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 36,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501704648945,
                    "endTime": 1501704648984
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 23,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501704648986,
                    "endTime": 1501704649009
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 19,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?af40d28f5133713f82d716d3ec967eba2c69efc5:102:9",
                        "toEqual@base/tests.webpack.js?af40d28f5133713f82d716d3ec967eba2c69efc5:201:10",
                        "@base/tests.webpack.js?af40d28f5133713f82d716d3ec967eba2c69efc5:2282:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1501704649590,
                    "endTime": 1501704649614
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 57,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?af40d28f5133713f82d716d3ec967eba2c69efc5:102:9",
                        "toEqual@base/tests.webpack.js?af40d28f5133713f82d716d3ec967eba2c69efc5:201:10",
                        "@base/tests.webpack.js?af40d28f5133713f82d716d3ec967eba2c69efc5:2293:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1501704649631,
                    "endTime": 1501704649696
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 20,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?af40d28f5133713f82d716d3ec967eba2c69efc5:102:9",
                        "toEqual@base/tests.webpack.js?af40d28f5133713f82d716d3ec967eba2c69efc5:201:10",
                        "@base/tests.webpack.js?af40d28f5133713f82d716d3ec967eba2c69efc5:2304:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1501704649745,
                    "endTime": 1501704649767
                }
            ]
        },
        {
            "browser": {
                "id": "60330625",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/59.0.3071.115 Safari/537.36",
                "name": "HeadlessChrome 0.0.0 (Mac OS X 10.12.5)",
                "state": 5,
                "lastResult": {
                    "success": 12,
                    "failed": 3,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 780,
                    "netTime": 124,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 11,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501704634547,
                    "endTime": 1501704634566
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501704634682,
                    "endTime": 1501704634687
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 7,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501704634688,
                    "endTime": 1501704634695
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 14,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501704634733,
                    "endTime": 1501704634748
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 2,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501704634748,
                    "endTime": 1501704634750
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501704634751,
                    "endTime": 1501704634751
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501704634752,
                    "endTime": 1501704634753
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 55,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501704634753,
                    "endTime": 1501704634808
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 15,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501704634809,
                    "endTime": 1501704634824
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501704634825,
                    "endTime": 1501704634828
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501704634828,
                    "endTime": 1501704634832
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 2,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501704634832,
                    "endTime": 1501704634840
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 5,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?af40d28f5133713f82d716d3ec967eba2c69efc5:102:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?af40d28f5133713f82d716d3ec967eba2c69efc5:201:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?af40d28f5133713f82d716d3ec967eba2c69efc5:2282:73)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1501704634840,
                    "endTime": 1501704634956
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?af40d28f5133713f82d716d3ec967eba2c69efc5:102:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?af40d28f5133713f82d716d3ec967eba2c69efc5:201:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?af40d28f5133713f82d716d3ec967eba2c69efc5:2293:73)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1501704634963,
                    "endTime": 1501704634965
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?af40d28f5133713f82d716d3ec967eba2c69efc5:102:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?af40d28f5133713f82d716d3ec967eba2c69efc5:201:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?af40d28f5133713f82d716d3ec967eba2c69efc5:2304:73)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1501704634965,
                    "endTime": 1501704634970
                }
            ]
        }
    ]
}