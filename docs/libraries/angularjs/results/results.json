{
    "summary": {
        "success": 10,
        "failed": 20,
        "error": false,
        "disconnected": false,
        "exitCode": 1
    },
    "browsers": [
        {
            "browser": {
                "id": "23134556",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/61.0.3163.100 Safari/537.36",
                "name": "HeadlessChrome 0.0.0 (Mac OS X 10.12.6)",
                "state": 5,
                "lastResult": {
                    "success": 5,
                    "failed": 10,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 2338,
                    "netTime": 595,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a CE with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 185,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1506458080721,
                    "endTime": 1506458081193
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 6,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1506458081207,
                    "endTime": 1506458081229
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 302,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1506458081231,
                    "endTime": 1506458081538
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 24,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1506458081553,
                    "endTime": 1506458081581
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "Error: Expected true to be false",
                        "    at assert (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9)",
                        "    at Expectation.toBe (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:191:28)",
                        "    at Context.it (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38577:75)"
                    ],
                    "assertionErrors": [],
                    "startTime": 1506458081582,
                    "endTime": 1506458081932
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "Error: Expected '{{$ctrl.num}}' to equal 42",
                        "    at assert (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:30)",
                        "    at Context.it (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38583:58)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected '{{$ctrl.num}}' to equal 42",
                            "showDiff": true,
                            "actual": "\"{{$ctrl.num}}\"",
                            "expected": "42"
                        }
                    ],
                    "startTime": 1506458081958,
                    "endTime": 1506458082142
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "Error: Expected '{{$ctrl.str}}' to equal 'Angular'",
                        "    at assert (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:30)",
                        "    at Context.it (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38588:58)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected '{{$ctrl.str}}' to equal 'Angular'",
                            "showDiff": true,
                            "actual": "\"{{$ctrl.str}}\"",
                            "expected": "\"Angular\""
                        }
                    ],
                    "startTime": 1506458082143,
                    "endTime": 1506458082302
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "Error: Expected undefined to equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                        "    at assert (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:30)",
                        "    at Context.it (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38593:58)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"A\"\n  \"n\"\n  \"g\"\n  \"u\"\n  \"l\"\n  \"a\"\n  \"r\"\n]"
                        }
                    ],
                    "startTime": 1506458082329,
                    "endTime": 1506458082354
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 0,
                    "log": [
                        "Error: Expected undefined to equal { org: 'angular', repo: 'angular' }",
                        "    at assert (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:30)",
                        "    at Context.it (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38598:58)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'angular', repo: 'angular' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"angular\"\n  \"repo\": \"angular\"\n}"
                        }
                    ],
                    "startTime": 1506458082355,
                    "endTime": 1506458082551
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 26,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1506458082559,
                    "endTime": 1506458082590
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 30,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:30)",
                        "    at Context.it (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38621:73)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1506458082610,
                    "endTime": 1506458082648
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 5,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:30)",
                        "    at Context.it (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38632:73)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1506458082655,
                    "endTime": 1506458082844
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:30)",
                        "    at Context.it (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38643:73)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1506458082845,
                    "endTime": 1506458082856
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:30)",
                        "    at Context.it (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38654:73)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1506458082857,
                    "endTime": 1506458082865
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:30)",
                        "    at Context.it (base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38665:73)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1506458082866,
                    "endTime": 1506458082874
                }
            ]
        },
        {
            "browser": {
                "id": "80051262",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:55.0) Gecko/20100101 Firefox/55.0",
                "name": "Firefox 55.0.0 (Mac OS X 10.12.0)",
                "state": 5,
                "lastResult": {
                    "success": 5,
                    "failed": 10,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 2879,
                    "netTime": 457,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a CE with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 26,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1506458090095,
                    "endTime": 1506458090208
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 13,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1506458090270,
                    "endTime": 1506458090296
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 69,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1506458090300,
                    "endTime": 1506458090787
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 198,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1506458091067,
                    "endTime": 1506458091280
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "Expected true to be false",
                        "assert@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9",
                        "toBe@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:191:8",
                        "@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38577:7",
                        ""
                    ],
                    "assertionErrors": [],
                    "startTime": 1506458091352,
                    "endTime": 1506458091457
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "Expected '{{$ctrl.num}}' to equal 42",
                        "assert@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9",
                        "toEqual@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:10",
                        "@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38583:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected '{{$ctrl.num}}' to equal 42",
                            "showDiff": true,
                            "actual": "\"{{$ctrl.num}}\"",
                            "expected": "42"
                        }
                    ],
                    "startTime": 1506458091701,
                    "endTime": 1506458091748
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "Expected '{{$ctrl.str}}' to equal 'Angular'",
                        "assert@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9",
                        "toEqual@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:10",
                        "@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38588:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected '{{$ctrl.str}}' to equal 'Angular'",
                            "showDiff": true,
                            "actual": "\"{{$ctrl.str}}\"",
                            "expected": "\"Angular\""
                        }
                    ],
                    "startTime": 1506458091752,
                    "endTime": 1506458091780
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Expected undefined to equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                        "assert@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9",
                        "toEqual@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:10",
                        "@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38593:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"A\"\n  \"n\"\n  \"g\"\n  \"u\"\n  \"l\"\n  \"a\"\n  \"r\"\n]"
                        }
                    ],
                    "startTime": 1506458091831,
                    "endTime": 1506458092023
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "Expected undefined to equal { org: 'angular', repo: 'angular' }",
                        "assert@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9",
                        "toEqual@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:10",
                        "@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38598:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'angular', repo: 'angular' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"angular\"\n  \"repo\": \"angular\"\n}"
                        }
                    ],
                    "startTime": 1506458092042,
                    "endTime": 1506458092075
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 18,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1506458092078,
                    "endTime": 1506458092143
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 38,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9",
                        "toEqual@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:10",
                        "@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38621:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1506458092288,
                    "endTime": 1506458092426
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 15,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9",
                        "toEqual@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:10",
                        "@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38632:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1506458092429,
                    "endTime": 1506458092608
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 13,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9",
                        "toEqual@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:10",
                        "@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38643:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1506458092610,
                    "endTime": 1506458092629
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 50,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9",
                        "toEqual@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:10",
                        "@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38654:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1506458092631,
                    "endTime": 1506458092688
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 8,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:108:9",
                        "toEqual@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:206:10",
                        "@base/tests.webpack.js?406ffbc2717bb37547612c8699b995e38b74736c:38665:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1506458092690,
                    "endTime": 1506458092723
                }
            ]
        }
    ]
}