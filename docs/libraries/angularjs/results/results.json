{
    "summary": {
        "success": 10,
        "failed": 20,
        "error": false,
        "disconnected": false,
        "exitCode": 1
    },
    "browsers": [
        {
            "browser": {
                "id": "35148214",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/60.0.3112.101 Safari/537.36",
                "name": "HeadlessChrome 0.0.0 (Mac OS X 10.12.6)",
                "state": 5,
                "lastResult": {
                    "success": 5,
                    "failed": 10,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 2050,
                    "netTime": 759,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a CE with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 38,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503891338558,
                    "endTime": 1503891339115
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503891339136,
                    "endTime": 1503891339153
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 172,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503891339154,
                    "endTime": 1503891339330
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 166,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503891339334,
                    "endTime": 1503891339508
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "Error: Expected true to be false",
                        "    at assert (base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:102:9)",
                        "    at Expectation.toBe (base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:194:28)",
                        "    at Context.it (base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:38799:75)"
                    ],
                    "assertionErrors": [],
                    "startTime": 1503891339580,
                    "endTime": 1503891339591
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 8,
                    "log": [
                        "Error: Expected '{{$ctrl.num}}' to equal 42",
                        "    at assert (base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:102:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:209:30)",
                        "    at Context.it (base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:38805:58)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected '{{$ctrl.num}}' to equal 42",
                            "showDiff": true,
                            "actual": "\"{{$ctrl.num}}\"",
                            "expected": "42"
                        }
                    ],
                    "startTime": 1503891339592,
                    "endTime": 1503891339707
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "Error: Expected '{{$ctrl.str}}' to equal 'Angular'",
                        "    at assert (base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:102:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:209:30)",
                        "    at Context.it (base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:38810:58)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected '{{$ctrl.str}}' to equal 'Angular'",
                            "showDiff": true,
                            "actual": "\"{{$ctrl.str}}\"",
                            "expected": "\"Angular\""
                        }
                    ],
                    "startTime": 1503891339728,
                    "endTime": 1503891339839
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "Error: Expected undefined to equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                        "    at assert (base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:102:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:209:30)",
                        "    at Context.it (base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:38815:58)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"A\"\n  \"n\"\n  \"g\"\n  \"u\"\n  \"l\"\n  \"a\"\n  \"r\"\n]"
                        }
                    ],
                    "startTime": 1503891339860,
                    "endTime": 1503891339874
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "Error: Expected undefined to equal { org: 'angular', repo: 'angular' }",
                        "    at assert (base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:102:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:209:30)",
                        "    at Context.it (base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:38820:58)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'angular', repo: 'angular' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"angular\"\n  \"repo\": \"angular\"\n}"
                        }
                    ],
                    "startTime": 1503891339875,
                    "endTime": 1503891340023
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 170,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503891340023,
                    "endTime": 1503891340196
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 52,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:102:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:209:30)",
                        "    at Context.it (base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:38843:73)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1503891340212,
                    "endTime": 1503891340274
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:102:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:209:30)",
                        "    at Context.it (base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:38854:73)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1503891340274,
                    "endTime": 1503891340279
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:102:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:209:30)",
                        "    at Context.it (base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:38865:73)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1503891340280,
                    "endTime": 1503891340286
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 120,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:102:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:209:30)",
                        "    at Context.it (base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:38876:73)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1503891340287,
                    "endTime": 1503891340412
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 12,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:102:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:209:30)",
                        "    at Context.it (base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:38887:73)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1503891340433,
                    "endTime": 1503891340450
                }
            ]
        },
        {
            "browser": {
                "id": "61045515",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:54.0) Gecko/20100101 Firefox/54.0",
                "name": "Firefox 54.0.0 (Mac OS X 10.12.0)",
                "state": 5,
                "lastResult": {
                    "success": 5,
                    "failed": 10,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 2298,
                    "netTime": 539,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a CE with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 31,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503891345464,
                    "endTime": 1503891345572
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 18,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503891345629,
                    "endTime": 1503891345670
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 104,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503891345714,
                    "endTime": 1503891345975
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 144,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503891346000,
                    "endTime": 1503891346160
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Expected true to be false",
                        "assert@base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:102:9",
                        "toBe@base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:194:8",
                        "@base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:38799:7",
                        ""
                    ],
                    "assertionErrors": [],
                    "startTime": 1503891346263,
                    "endTime": 1503891346334
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Expected '{{$ctrl.num}}' to equal 42",
                        "assert@base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:102:9",
                        "toEqual@base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:209:10",
                        "@base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:38805:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected '{{$ctrl.num}}' to equal 42",
                            "showDiff": true,
                            "actual": "\"{{$ctrl.num}}\"",
                            "expected": "42"
                        }
                    ],
                    "startTime": 1503891346354,
                    "endTime": 1503891346408
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "Expected '{{$ctrl.str}}' to equal 'Angular'",
                        "assert@base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:102:9",
                        "toEqual@base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:209:10",
                        "@base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:38810:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected '{{$ctrl.str}}' to equal 'Angular'",
                            "showDiff": true,
                            "actual": "\"{{$ctrl.str}}\"",
                            "expected": "\"Angular\""
                        }
                    ],
                    "startTime": 1503891346411,
                    "endTime": 1503891346433
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 5,
                    "log": [
                        "Expected undefined to equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                        "assert@base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:102:9",
                        "toEqual@base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:209:10",
                        "@base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:38815:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"A\"\n  \"n\"\n  \"g\"\n  \"u\"\n  \"l\"\n  \"a\"\n  \"r\"\n]"
                        }
                    ],
                    "startTime": 1503891346436,
                    "endTime": 1503891346647
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "Expected undefined to equal { org: 'angular', repo: 'angular' }",
                        "assert@base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:102:9",
                        "toEqual@base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:209:10",
                        "@base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:38820:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'angular', repo: 'angular' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"angular\"\n  \"repo\": \"angular\"\n}"
                        }
                    ],
                    "startTime": 1503891346653,
                    "endTime": 1503891347039
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 13,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503891347045,
                    "endTime": 1503891347065
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 51,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:102:9",
                        "toEqual@base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:209:10",
                        "@base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:38843:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1503891347068,
                    "endTime": 1503891347261
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 39,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:102:9",
                        "toEqual@base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:209:10",
                        "@base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:38854:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1503891347268,
                    "endTime": 1503891347340
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 18,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:102:9",
                        "toEqual@base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:209:10",
                        "@base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:38865:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1503891347351,
                    "endTime": 1503891347401
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 60,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:102:9",
                        "toEqual@base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:209:10",
                        "@base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:38876:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1503891347404,
                    "endTime": 1503891347494
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 50,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:102:9",
                        "toEqual@base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:209:10",
                        "@base/tests.webpack.js?41e5bae3ce6034cd7f23ddd9f4147613c2be94a4:38887:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1503891347504,
                    "endTime": 1503891347598
                }
            ]
        }
    ]
}