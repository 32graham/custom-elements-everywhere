{
    "summary": {
        "success": 16,
        "failed": 14,
        "error": false,
        "disconnected": false,
        "exitCode": 1,
        "score": 71,
        "basicSupport": {
            "total": 16,
            "failed": 0,
            "passed": 16
        },
        "advancedSupport": {
            "total": 14,
            "failed": 14,
            "passed": 0
        }
    },
    "browsers": [
        {
            "browser": {
                "id": "86535651",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/63.0.3239.84 Safari/537.36",
                "name": "HeadlessChrome 0.0.0 (Mac OS X 10.12.6)",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 958,
                    "netTime": 251,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a CE with no children",
                    "suite": [
                        "basic support",
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 15,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513879690222,
                    "endTime": 1513879690306,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 5,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513879690311,
                    "endTime": 1513879690334,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 37,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513879690335,
                    "endTime": 1513879690458,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and handle hiding and showing the element",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 47,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513879690464,
                    "endTime": 1513879690523,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513879690524,
                    "endTime": 1513879690630,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513879690633,
                    "endTime": 1513879690654,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513879690655,
                    "endTime": 1513879690690,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "basic support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 31,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513879690690,
                    "endTime": 1513879690725,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 0,
                    "log": [
                        "ReferenceError: wc is not defined",
                        "    at Context.<anonymous> (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:42777:18)"
                    ],
                    "assertionErrors": [],
                    "startTime": 1513879690729,
                    "endTime": 1513879690756,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 0,
                    "log": [
                        "ReferenceError: wc is not defined",
                        "    at Context.<anonymous> (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:42783:18)"
                    ],
                    "assertionErrors": [],
                    "startTime": 1513879690757,
                    "endTime": 1513879690812,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 13,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:242:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:42798:75)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1513879690812,
                    "endTime": 1513879690883,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 9,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:242:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:42810:75)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1513879690884,
                    "endTime": 1513879690898,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:242:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:42822:75)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1513879690909,
                    "endTime": 1513879690924,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:242:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:42834:75)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1513879690925,
                    "endTime": 1513879690933,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 87,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:242:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:42846:75)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1513879690934,
                    "endTime": 1513879691027,
                    "weight": 1
                }
            ]
        },
        {
            "browser": {
                "id": "91937313",
                "fullName": "FirefoxHeadless",
                "name": "FirefoxHeadless",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 1157,
                    "netTime": 238,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a CE with no children",
                    "suite": [
                        "basic support",
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 32,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513879700636,
                    "endTime": 1513879700719,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 7,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513879700727,
                    "endTime": 1513879700860,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 43,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513879700866,
                    "endTime": 1513879700919,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and handle hiding and showing the element",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 49,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513879700971,
                    "endTime": 1513879701081,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513879701085,
                    "endTime": 1513879701113,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513879701115,
                    "endTime": 1513879701174,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513879701176,
                    "endTime": 1513879701196,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "basic support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 9,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1513879701211,
                    "endTime": 1513879701238,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 0,
                    "log": [
                        "wc is not defined",
                        "@base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:42777:11",
                        ""
                    ],
                    "assertionErrors": [],
                    "startTime": 1513879701243,
                    "endTime": 1513879701252,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 0,
                    "log": [
                        "wc is not defined",
                        "@base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:42783:11",
                        ""
                    ],
                    "assertionErrors": [],
                    "startTime": 1513879701254,
                    "endTime": 1513879701261,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 13,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:108:9",
                        "toEqual@base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:242:10",
                        "@base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:42798:7",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1513879701402,
                    "endTime": 1513879701447,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 13,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:108:9",
                        "toEqual@base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:242:10",
                        "@base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:42810:7",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1513879701449,
                    "endTime": 1513879701466,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 13,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:108:9",
                        "toEqual@base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:242:10",
                        "@base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:42822:7",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1513879701470,
                    "endTime": 1513879701491,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 10,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:108:9",
                        "toEqual@base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:242:10",
                        "@base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:42834:7",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1513879701495,
                    "endTime": 1513879701527,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 49,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:108:9",
                        "toEqual@base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:242:10",
                        "@base/tests.webpack.js?76caf3aaf86fe9c314c9d6cab6800f8389f76f06:42846:7",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1513879701528,
                    "endTime": 1513879701581,
                    "weight": 1
                }
            ]
        }
    ],
    "library": {
        "name": "angular",
        "version": "1.6.7"
    }
}