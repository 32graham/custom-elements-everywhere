{
    "summary": {
        "success": 10,
        "failed": 20,
        "error": false,
        "disconnected": false,
        "exitCode": 1,
        "score": 44,
        "basicSupport": {
            "total": 20,
            "failed": 10,
            "passed": 10
        },
        "advancedSupport": {
            "total": 10,
            "failed": 10,
            "passed": 0
        }
    },
    "browsers": [
        {
            "browser": {
                "id": "47730856",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:57.0) Gecko/20100101 Firefox/57.0",
                "name": "Firefox 57.0.0 (Mac OS X 10.12.0)",
                "state": 5,
                "lastResult": {
                    "success": 5,
                    "failed": 10,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 1983,
                    "netTime": 244,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a CE with no children",
                    "suite": [
                        "basic support",
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 12,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1511951096340,
                    "endTime": 1511951096446,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 13,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1511951096577,
                    "endTime": 1511951096604,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 32,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1511951096608,
                    "endTime": 1511951096647,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and handle hiding and showing the element",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 96,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1511951096650,
                    "endTime": 1511951096996,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Expected true to be false",
                        "assert@base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:108:9",
                        "toBe@base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:227:8",
                        "@base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:38611:9",
                        ""
                    ],
                    "assertionErrors": [],
                    "startTime": 1511951097081,
                    "endTime": 1511951097120,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "Expected '{{$ctrl.num}}' to equal 42",
                        "assert@base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:108:9",
                        "toEqual@base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:242:10",
                        "@base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:38618:7",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected '{{$ctrl.num}}' to equal 42",
                            "showDiff": true,
                            "actual": "\"{{$ctrl.num}}\"",
                            "expected": "42"
                        }
                    ],
                    "startTime": 1511951097122,
                    "endTime": 1511951097147,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 0,
                    "log": [
                        "Expected '{{$ctrl.str}}' to equal 'Angular'",
                        "assert@base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:108:9",
                        "toEqual@base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:242:10",
                        "@base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:38624:7",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected '{{$ctrl.str}}' to equal 'Angular'",
                            "showDiff": true,
                            "actual": "\"{{$ctrl.str}}\"",
                            "expected": "\"Angular\""
                        }
                    ],
                    "startTime": 1511951097151,
                    "endTime": 1511951097420,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "Expected undefined to equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                        "assert@base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:108:9",
                        "toEqual@base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:242:10",
                        "@base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:38630:7",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"A\"\n  \"n\"\n  \"g\"\n  \"u\"\n  \"l\"\n  \"a\"\n  \"r\"\n]"
                        }
                    ],
                    "startTime": 1511951097422,
                    "endTime": 1511951097451,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "Expected undefined to equal { org: 'angular', repo: 'angular' }",
                        "assert@base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:108:9",
                        "toEqual@base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:242:10",
                        "@base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:38636:7",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'angular', repo: 'angular' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"angular\"\n  \"repo\": \"angular\"\n}"
                        }
                    ],
                    "startTime": 1511951097453,
                    "endTime": 1511951097471,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "basic support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 9,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1511951097478,
                    "endTime": 1511951097492,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 15,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:108:9",
                        "toEqual@base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:242:10",
                        "@base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:42478:7",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1511951097496,
                    "endTime": 1511951097780,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 14,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:108:9",
                        "toEqual@base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:242:10",
                        "@base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:42490:7",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1511951097787,
                    "endTime": 1511951097849,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 14,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:108:9",
                        "toEqual@base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:242:10",
                        "@base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:42502:7",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1511951097853,
                    "endTime": 1511951098043,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 20,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:108:9",
                        "toEqual@base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:242:10",
                        "@base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:42514:7",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1511951098044,
                    "endTime": 1511951098074,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 14,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:108:9",
                        "toEqual@base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:242:10",
                        "@base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:42526:7",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1511951098075,
                    "endTime": 1511951098093,
                    "weight": 1
                }
            ]
        },
        {
            "browser": {
                "id": "58784561",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/62.0.3202.94 Safari/537.36",
                "name": "HeadlessChrome 0.0.0 (Mac OS X 10.12.6)",
                "state": 5,
                "lastResult": {
                    "success": 5,
                    "failed": 10,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 1213,
                    "netTime": 288,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a CE with no children",
                    "suite": [
                        "basic support",
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 98,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1511951092016,
                    "endTime": 1511951092315,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 6,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1511951092347,
                    "endTime": 1511951092359,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 53,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1511951092361,
                    "endTime": 1511951092421,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and handle hiding and showing the element",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 32,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1511951092424,
                    "endTime": 1511951092464,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "Error: Expected true to be false",
                        "    at assert (base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:108:9)",
                        "    at Expectation.toBe (base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:227:28)",
                        "    at Context.<anonymous> (base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:38611:77)"
                    ],
                    "assertionErrors": [],
                    "startTime": 1511951092467,
                    "endTime": 1511951092621,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Error: Expected '{{$ctrl.num}}' to equal 42",
                        "    at assert (base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:242:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:38618:60)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected '{{$ctrl.num}}' to equal 42",
                            "showDiff": true,
                            "actual": "\"{{$ctrl.num}}\"",
                            "expected": "42"
                        }
                    ],
                    "startTime": 1511951092628,
                    "endTime": 1511951092640,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 0,
                    "log": [
                        "Error: Expected '{{$ctrl.str}}' to equal 'Angular'",
                        "    at assert (base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:242:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:38624:60)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected '{{$ctrl.str}}' to equal 'Angular'",
                            "showDiff": true,
                            "actual": "\"{{$ctrl.str}}\"",
                            "expected": "\"Angular\""
                        }
                    ],
                    "startTime": 1511951092641,
                    "endTime": 1511951092672,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "Error: Expected undefined to equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                        "    at assert (base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:242:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:38630:60)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"A\"\n  \"n\"\n  \"g\"\n  \"u\"\n  \"l\"\n  \"a\"\n  \"r\"\n]"
                        }
                    ],
                    "startTime": 1511951092673,
                    "endTime": 1511951092684,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "Error: Expected undefined to equal { org: 'angular', repo: 'angular' }",
                        "    at assert (base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:242:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:38636:60)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'angular', repo: 'angular' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"angular\"\n  \"repo\": \"angular\"\n}"
                        }
                    ],
                    "startTime": 1511951092685,
                    "endTime": 1511951092693,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "basic support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1511951092773,
                    "endTime": 1511951092835,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 7,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:242:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:42478:75)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1511951092837,
                    "endTime": 1511951092911,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 37,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:242:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:42490:75)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1511951092938,
                    "endTime": 1511951092988,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 13,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:242:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:42502:75)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1511951092991,
                    "endTime": 1511951093016,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 6,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:242:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:42514:75)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1511951093135,
                    "endTime": 1511951093162,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 27,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:242:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?58da0575cceb901b7cb9bff01532b86c92677cfa:42526:75)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1511951093163,
                    "endTime": 1511951093195,
                    "weight": 1
                }
            ]
        }
    ],
    "library": {
        "name": "angular",
        "version": "1.6.6"
    }
}