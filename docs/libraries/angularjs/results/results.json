{
    "summary": {
        "success": 12,
        "failed": 18,
        "error": false,
        "disconnected": false,
        "exitCode": 1
    },
    "browsers": [
        {
            "browser": {
                "id": "28876409",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:54.0) Gecko/20100101 Firefox/54.0",
                "name": "Firefox 54.0.0 (Mac OS X 10.12.0)",
                "state": 5,
                "lastResult": {
                    "success": 6,
                    "failed": 9,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 2879,
                    "netTime": 566,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a CE with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 55,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503814275393,
                    "endTime": 1503814275683
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 11,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503814275709,
                    "endTime": 1503814275754
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 37,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503814275765,
                    "endTime": 1503814275877
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 134,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503814275888,
                    "endTime": 1503814276045
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503814276225,
                    "endTime": 1503814276265
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "Expected '{{$ctrl.num}}' to equal 42",
                        "assert@base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:102:9",
                        "toEqual@base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:209:10",
                        "@base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:38799:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected '{{$ctrl.num}}' to equal 42",
                            "showDiff": true,
                            "actual": "\"{{$ctrl.num}}\"",
                            "expected": "42"
                        }
                    ],
                    "startTime": 1503814276269,
                    "endTime": 1503814276392
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 0,
                    "log": [
                        "Expected '{{$ctrl.str}}' to equal 'Angular'",
                        "assert@base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:102:9",
                        "toEqual@base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:209:10",
                        "@base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:38804:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected '{{$ctrl.str}}' to equal 'Angular'",
                            "showDiff": true,
                            "actual": "\"{{$ctrl.str}}\"",
                            "expected": "\"Angular\""
                        }
                    ],
                    "startTime": 1503814276396,
                    "endTime": 1503814276430
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Expected undefined to equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                        "assert@base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:102:9",
                        "toEqual@base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:209:10",
                        "@base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:38809:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"A\"\n  \"n\"\n  \"g\"\n  \"u\"\n  \"l\"\n  \"a\"\n  \"r\"\n]"
                        }
                    ],
                    "startTime": 1503814276435,
                    "endTime": 1503814276610
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Expected undefined to equal { org: 'angular', repo: 'angular' }",
                        "assert@base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:102:9",
                        "toEqual@base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:209:10",
                        "@base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:38814:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'angular', repo: 'angular' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"angular\"\n  \"repo\": \"angular\"\n}"
                        }
                    ],
                    "startTime": 1503814276628,
                    "endTime": 1503814276679
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 25,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503814276685,
                    "endTime": 1503814276731
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 71,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:102:9",
                        "toEqual@base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:209:10",
                        "@base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:38837:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1503814277079,
                    "endTime": 1503814277407
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 48,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:102:9",
                        "toEqual@base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:209:10",
                        "@base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:38848:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1503814277436,
                    "endTime": 1503814277745
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 62,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:102:9",
                        "toEqual@base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:209:10",
                        "@base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:38859:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1503814277753,
                    "endTime": 1503814277845
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 23,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:102:9",
                        "toEqual@base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:209:10",
                        "@base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:38870:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1503814277903,
                    "endTime": 1503814277949
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 93,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:102:9",
                        "toEqual@base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:209:10",
                        "@base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:38881:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1503814277953,
                    "endTime": 1503814278062
                }
            ]
        },
        {
            "browser": {
                "id": "75666213",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/60.0.3112.101 Safari/537.36",
                "name": "HeadlessChrome 0.0.0 (Mac OS X 10.12.6)",
                "state": 5,
                "lastResult": {
                    "success": 6,
                    "failed": 9,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 2936,
                    "netTime": 1021,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a CE with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 213,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503814267869,
                    "endTime": 1503814268626
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503814268633,
                    "endTime": 1503814268699
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 198,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503814268700,
                    "endTime": 1503814268991
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 180,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503814269024,
                    "endTime": 1503814269217
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503814269416,
                    "endTime": 1503814269468
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 211,
                    "log": [
                        "Error: Expected '{{$ctrl.num}}' to equal 42",
                        "    at assert (base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:102:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:209:30)",
                        "    at Context.it (base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:38799:58)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected '{{$ctrl.num}}' to equal 42",
                            "showDiff": true,
                            "actual": "\"{{$ctrl.num}}\"",
                            "expected": "42"
                        }
                    ],
                    "startTime": 1503814269470,
                    "endTime": 1503814269715
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "Error: Expected '{{$ctrl.str}}' to equal 'Angular'",
                        "    at assert (base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:102:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:209:30)",
                        "    at Context.it (base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:38804:58)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected '{{$ctrl.str}}' to equal 'Angular'",
                            "showDiff": true,
                            "actual": "\"{{$ctrl.str}}\"",
                            "expected": "\"Angular\""
                        }
                    ],
                    "startTime": 1503814269720,
                    "endTime": 1503814269740
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "Error: Expected undefined to equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                        "    at assert (base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:102:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:209:30)",
                        "    at Context.it (base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:38809:58)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'A', 'n', 'g', 'u', 'l', 'a', 'r' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"A\"\n  \"n\"\n  \"g\"\n  \"u\"\n  \"l\"\n  \"a\"\n  \"r\"\n]"
                        }
                    ],
                    "startTime": 1503814269741,
                    "endTime": 1503814269982
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Error: Expected undefined to equal { org: 'angular', repo: 'angular' }",
                        "    at assert (base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:102:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:209:30)",
                        "    at Context.it (base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:38814:58)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'angular', repo: 'angular' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"angular\"\n  \"repo\": \"angular\"\n}"
                        }
                    ],
                    "startTime": 1503814270003,
                    "endTime": 1503814270042
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 90,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503814270043,
                    "endTime": 1503814270143
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 22,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:102:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:209:30)",
                        "    at Context.it (base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:38837:73)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1503814270155,
                    "endTime": 1503814270190
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 82,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:102:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:209:30)",
                        "    at Context.it (base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:38848:73)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1503814270191,
                    "endTime": 1503814270368
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:102:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:209:30)",
                        "    at Context.it (base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:38859:73)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1503814270369,
                    "endTime": 1503814270483
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 7,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:102:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:209:30)",
                        "    at Context.it (base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:38870:73)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1503814270485,
                    "endTime": 1503814270496
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 5,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:102:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:209:30)",
                        "    at Context.it (base/tests.webpack.js?6893ebbb091d4cec713cfb69d3631acff456c9f9:38881:73)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1503814270497,
                    "endTime": 1503814270506
                }
            ]
        }
    ]
}