{
    "summary": {
        "success": 16,
        "failed": 14,
        "error": false,
        "disconnected": false,
        "exitCode": 1,
        "score": 71,
        "basicSupport": {
            "total": 16,
            "failed": 0,
            "passed": 16
        },
        "advancedSupport": {
            "total": 14,
            "failed": 14,
            "passed": 0
        }
    },
    "browsers": [
        {
            "browser": {
                "id": "64080697",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/62.0.3202.94 Safari/537.36",
                "name": "HeadlessChrome 0.0.0 (Mac OS X 10.12.6)",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 1122,
                    "netTime": 232,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a CE with no children",
                    "suite": [
                        "basic support",
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 36,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512744021362,
                    "endTime": 1512744021622,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 48,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512744021626,
                    "endTime": 1512744021677,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 25,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512744021680,
                    "endTime": 1512744021735,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and handle hiding and showing the element",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 59,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512744021736,
                    "endTime": 1512744021798,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512744021803,
                    "endTime": 1512744021868,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512744021891,
                    "endTime": 1512744021961,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 2,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512744021963,
                    "endTime": 1512744021983,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "basic support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512744021984,
                    "endTime": 1512744022003,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 0,
                    "log": [
                        "ReferenceError: wc is not defined",
                        "    at Context.<anonymous> (base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:42764:18)"
                    ],
                    "assertionErrors": [],
                    "startTime": 1512744022005,
                    "endTime": 1512744022010,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 0,
                    "log": [
                        "ReferenceError: wc is not defined",
                        "    at Context.<anonymous> (base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:42770:18)"
                    ],
                    "assertionErrors": [],
                    "startTime": 1512744022010,
                    "endTime": 1512744022019,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 46,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:242:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:42785:75)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512744022019,
                    "endTime": 1512744022071,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:242:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:42797:75)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512744022074,
                    "endTime": 1512744022089,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:242:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:42809:75)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512744022090,
                    "endTime": 1512744022113,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:242:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:42821:75)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512744022130,
                    "endTime": 1512744022135,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:242:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:42833:75)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512744022135,
                    "endTime": 1512744022146,
                    "weight": 1
                }
            ]
        },
        {
            "browser": {
                "id": "95729649",
                "fullName": "FirefoxHeadless",
                "name": "FirefoxHeadless",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 4680,
                    "netTime": 295,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a CE with no children",
                    "suite": [
                        "basic support",
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 97,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512744032424,
                    "endTime": 1512744032637,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 44,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512744032791,
                    "endTime": 1512744032849,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 26,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512744032856,
                    "endTime": 1512744033477,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and handle hiding and showing the element",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 31,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512744033482,
                    "endTime": 1512744034518,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512744034527,
                    "endTime": 1512744035425,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512744035545,
                    "endTime": 1512744035596,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512744035604,
                    "endTime": 1512744036019,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "basic support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 7,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512744036022,
                    "endTime": 1512744036042,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 0,
                    "log": [
                        "wc is not defined",
                        "@base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:42764:11",
                        ""
                    ],
                    "assertionErrors": [],
                    "startTime": 1512744036044,
                    "endTime": 1512744036059,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 0,
                    "log": [
                        "wc is not defined",
                        "@base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:42770:11",
                        ""
                    ],
                    "assertionErrors": [],
                    "startTime": 1512744036062,
                    "endTime": 1512744036067,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 14,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:108:9",
                        "toEqual@base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:242:10",
                        "@base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:42785:7",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512744036070,
                    "endTime": 1512744036162,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 16,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:108:9",
                        "toEqual@base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:242:10",
                        "@base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:42797:7",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512744036548,
                    "endTime": 1512744036569,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 9,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:108:9",
                        "toEqual@base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:242:10",
                        "@base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:42809:7",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512744036571,
                    "endTime": 1512744036583,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 39,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:108:9",
                        "toEqual@base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:242:10",
                        "@base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:42821:7",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512744036585,
                    "endTime": 1512744036675,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 9,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:108:9",
                        "toEqual@base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:242:10",
                        "@base/tests.webpack.js?ec8661c533499894653ec87b5b23b3b7d6300524:42833:7",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512744036781,
                    "endTime": 1512744036795,
                    "weight": 1
                }
            ]
        }
    ],
    "library": {
        "name": "angular",
        "version": "1.6.7"
    }
}