{
    "summary": {
        "success": 26,
        "failed": 4,
        "error": false,
        "disconnected": false,
        "exitCode": 1
    },
    "browsers": [
        {
            "browser": {
                "id": "43792322",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/62.0.3202.75 Safari/537.36",
                "name": "HeadlessChrome 0.0.0 (Mac OS X 10.12.6)",
                "state": 5,
                "lastResult": {
                    "success": 13,
                    "failed": 2,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 680,
                    "netTime": 438,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 8,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388804155,
                    "endTime": 1509388804164
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 2,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388804166,
                    "endTime": 1509388804168
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 259,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388804168,
                    "endTime": 1509388804428
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 15,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388804430,
                    "endTime": 1509388804445
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388804451,
                    "endTime": 1509388804455
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388804455,
                    "endTime": 1509388804456
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388804456,
                    "endTime": 1509388804457
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Error: Expected undefined to equal [ 'h', 'y', 'p', 'e', 'r', 'H', 'T', 'M', 'L' ]",
                        "    at assert (base/tests.webpack.js?5cdca48b2bc0a7b04b0e330998883e0b433e8ab3:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?5cdca48b2bc0a7b04b0e330998883e0b433e8ab3:206:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?5cdca48b2bc0a7b04b0e330998883e0b433e8ab3:1264:60)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'h', 'y', 'p', 'e', 'r', 'H', 'T', 'M', 'L' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"h\"\n  \"y\"\n  \"p\"\n  \"e\"\n  \"r\"\n  \"H\"\n  \"T\"\n  \"M\"\n  \"L\"\n]"
                        }
                    ],
                    "startTime": 1509388804457,
                    "endTime": 1509388804546
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 1,
                    "log": [
                        "Error: Expected undefined to equal { org: 'viperHTML', repo: 'hyperHTML' }",
                        "    at assert (base/tests.webpack.js?5cdca48b2bc0a7b04b0e330998883e0b433e8ab3:108:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?5cdca48b2bc0a7b04b0e330998883e0b433e8ab3:206:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?5cdca48b2bc0a7b04b0e330998883e0b433e8ab3:1270:60)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'viperHTML', repo: 'hyperHTML' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"viperHTML\"\n  \"repo\": \"hyperHTML\"\n}"
                        }
                    ],
                    "startTime": 1509388804546,
                    "endTime": 1509388804548
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 19,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388804588,
                    "endTime": 1509388804612
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 40,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388804622,
                    "endTime": 1509388804662
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 27,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388804678,
                    "endTime": 1509388804705
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 17,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388804710,
                    "endTime": 1509388804727
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 13,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388804732,
                    "endTime": 1509388804745
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 30,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388804750,
                    "endTime": 1509388804780
                }
            ]
        },
        {
            "browser": {
                "id": "89823633",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:56.0) Gecko/20100101 Firefox/56.0",
                "name": "Firefox 56.0.0 (Mac OS X 10.12.0)",
                "state": 5,
                "lastResult": {
                    "success": 13,
                    "failed": 2,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 3874,
                    "netTime": 2183,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 8,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388810237,
                    "endTime": 1509388810247
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 6,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388810250,
                    "endTime": 1509388810256
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 166,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388810258,
                    "endTime": 1509388810424
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 705,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388810427,
                    "endTime": 1509388811134
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388811615,
                    "endTime": 1509388811620
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 2,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388811621,
                    "endTime": 1509388811624
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 2,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388811625,
                    "endTime": 1509388811627
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 6,
                    "log": [
                        "Expected undefined to equal [ 'h', 'y', 'p', 'e', 'r', 'H', 'T', 'M', 'L' ]",
                        "assert@base/tests.webpack.js?5cdca48b2bc0a7b04b0e330998883e0b433e8ab3:108:9",
                        "toEqual@base/tests.webpack.js?5cdca48b2bc0a7b04b0e330998883e0b433e8ab3:206:10",
                        "@base/tests.webpack.js?5cdca48b2bc0a7b04b0e330998883e0b433e8ab3:1264:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'h', 'y', 'p', 'e', 'r', 'H', 'T', 'M', 'L' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"h\"\n  \"y\"\n  \"p\"\n  \"e\"\n  \"r\"\n  \"H\"\n  \"T\"\n  \"M\"\n  \"L\"\n]"
                        }
                    ],
                    "startTime": 1509388811628,
                    "endTime": 1509388811638
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Expected undefined to equal { org: 'viperHTML', repo: 'hyperHTML' }",
                        "assert@base/tests.webpack.js?5cdca48b2bc0a7b04b0e330998883e0b433e8ab3:108:9",
                        "toEqual@base/tests.webpack.js?5cdca48b2bc0a7b04b0e330998883e0b433e8ab3:206:10",
                        "@base/tests.webpack.js?5cdca48b2bc0a7b04b0e330998883e0b433e8ab3:1270:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'viperHTML', repo: 'hyperHTML' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"viperHTML\"\n  \"repo\": \"hyperHTML\"\n}"
                        }
                    ],
                    "startTime": 1509388811638,
                    "endTime": 1509388811642
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 282,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388811675,
                    "endTime": 1509388811957
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 356,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388811977,
                    "endTime": 1509388812335
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 189,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388812509,
                    "endTime": 1509388812699
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 72,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388813067,
                    "endTime": 1509388813141
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 213,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388813306,
                    "endTime": 1509388813521
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 170,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388813809,
                    "endTime": 1509388813981
                }
            ]
        }
    ],
    "library": {
        "name": "hyperhtml",
        "version": "1.12.5"
    }
}