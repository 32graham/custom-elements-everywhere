{
    "summary": {
        "success": 16,
        "failed": 14,
        "error": false,
        "disconnected": false,
        "exitCode": 1
    },
    "browsers": [
        {
            "browser": {
                "id": "22694928",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/62.0.3202.94 Safari/537.36",
                "name": "HeadlessChrome 0.0.0 (Mac OS X 10.12.6)",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 713,
                    "netTime": 504,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 196,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512046532565,
                    "endTime": 1512046532764
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512046532872,
                    "endTime": 1512046532875
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 9,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512046532875,
                    "endTime": 1512046532884
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 8,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512046532893,
                    "endTime": 1512046532901
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 2,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512046532901,
                    "endTime": 1512046532905
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512046532905,
                    "endTime": 1512046532906
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 66,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512046532914,
                    "endTime": 1512046532980
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 134,
                    "log": [
                        "Error: Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                        "    at assert (base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:1114:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:2182:33)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"R\"\n  \"e\"\n  \"a\"\n  \"c\"\n  \"t\"\n]"
                        }
                    ],
                    "startTime": 1512046532981,
                    "endTime": 1512046533147
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Error: Expected undefined to equal { org: 'facebook', repo: 'react' }",
                        "    at assert (base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:1114:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:2189:33)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"facebook\"\n  \"repo\": \"react\"\n}"
                        }
                    ],
                    "startTime": 1512046533151,
                    "endTime": 1512046533154
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 41,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512046533154,
                    "endTime": 1512046533196
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 5,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:1114:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:2247:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512046533197,
                    "endTime": 1512046533203
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:1114:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:2257:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512046533203,
                    "endTime": 1512046533207
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 13,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:1114:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:2267:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512046533207,
                    "endTime": 1512046533220
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 11,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:1114:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:2277:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512046533221,
                    "endTime": 1512046533233
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 9,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:1114:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:2287:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512046533233,
                    "endTime": 1512046533242
                }
            ]
        },
        {
            "browser": {
                "id": "65851534",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:57.0) Gecko/20100101 Firefox/57.0",
                "name": "Firefox 57.0.0 (Mac OS X 10.12.0)",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 969,
                    "netTime": 539,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 19,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512046535815,
                    "endTime": 1512046535835
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 16,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512046535838,
                    "endTime": 1512046535854
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 195,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512046535859,
                    "endTime": 1512046536054
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 32,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512046536109,
                    "endTime": 1512046536141
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 12,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512046536143,
                    "endTime": 1512046536170
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 2,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512046536171,
                    "endTime": 1512046536174
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 11,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512046536175,
                    "endTime": 1512046536186
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 17,
                    "log": [
                        "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                        "assert@base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:690:9",
                        "toEqual@base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:1114:10",
                        "@base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:2182:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"R\"\n  \"e\"\n  \"a\"\n  \"c\"\n  \"t\"\n]"
                        }
                    ],
                    "startTime": 1512046536191,
                    "endTime": 1512046536276
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 5,
                    "log": [
                        "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                        "assert@base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:690:9",
                        "toEqual@base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:1114:10",
                        "@base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:2189:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"facebook\"\n  \"repo\": \"react\"\n}"
                        }
                    ],
                    "startTime": 1512046536297,
                    "endTime": 1512046536304
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 16,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512046536307,
                    "endTime": 1512046536324
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 15,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:690:9",
                        "toEqual@base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:1114:10",
                        "@base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:2247:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512046536325,
                    "endTime": 1512046536341
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 79,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:690:9",
                        "toEqual@base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:1114:10",
                        "@base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:2257:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512046536342,
                    "endTime": 1512046536421
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 6,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:690:9",
                        "toEqual@base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:1114:10",
                        "@base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:2267:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512046536427,
                    "endTime": 1512046536434
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 90,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:690:9",
                        "toEqual@base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:1114:10",
                        "@base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:2277:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512046536442,
                    "endTime": 1512046536547
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 24,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:690:9",
                        "toEqual@base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:1114:10",
                        "@base/tests.webpack.js?1a679f65349bd44343576bd8d73287305a13db9a:2287:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512046536719,
                    "endTime": 1512046536744
                }
            ]
        }
    ],
    "library": {
        "name": "react",
        "version": "16.1.1"
    }
}