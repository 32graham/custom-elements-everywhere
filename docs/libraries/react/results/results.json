{
    "summary": {
        "success": 16,
        "failed": 14,
        "error": false,
        "disconnected": false,
        "exitCode": 1
    },
    "browsers": [
        {
            "browser": {
                "id": "10464561",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:55.0) Gecko/20100101 Firefox/55.0",
                "name": "Firefox 55.0.0 (Mac OS X 10.12.0)",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 1046,
                    "netTime": 332,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 39,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1505948789631,
                    "endTime": 1505948789675
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 11,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1505948789678,
                    "endTime": 1505948789691
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 68,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1505948789693,
                    "endTime": 1505948789761
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 101,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1505948790013,
                    "endTime": 1505948790116
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 7,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1505948790168,
                    "endTime": 1505948790175
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 6,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1505948790176,
                    "endTime": 1505948790183
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 5,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1505948790184,
                    "endTime": 1505948790189
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 12,
                    "log": [
                        "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                        "assert@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:4709:9",
                        "toEqual@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:6690:10",
                        "@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:12543:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"R\"\n  \"e\"\n  \"a\"\n  \"c\"\n  \"t\"\n]"
                        }
                    ],
                    "startTime": 1505948790190,
                    "endTime": 1505948790232
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 7,
                    "log": [
                        "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                        "assert@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:4709:9",
                        "toEqual@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:6690:10",
                        "@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:12550:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"facebook\"\n  \"repo\": \"react\"\n}"
                        }
                    ],
                    "startTime": 1505948790233,
                    "endTime": 1505948790241
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 28,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1505948790246,
                    "endTime": 1505948790274
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 18,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:4709:9",
                        "toEqual@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:6690:10",
                        "@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:12608:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1505948790417,
                    "endTime": 1505948790442
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 8,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:4709:9",
                        "toEqual@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:6690:10",
                        "@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:12618:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1505948790445,
                    "endTime": 1505948790454
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 5,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:4709:9",
                        "toEqual@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:6690:10",
                        "@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:12628:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1505948790456,
                    "endTime": 1505948790462
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 11,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:4709:9",
                        "toEqual@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:6690:10",
                        "@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:12638:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1505948790465,
                    "endTime": 1505948790478
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 6,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:4709:9",
                        "toEqual@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:6690:10",
                        "@base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:12648:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1505948790479,
                    "endTime": 1505948790485
                }
            ]
        },
        {
            "browser": {
                "id": "18609568",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/61.0.3163.91 Safari/537.36",
                "name": "HeadlessChrome 0.0.0 (Mac OS X 10.12.6)",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 1051,
                    "netTime": 232,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 49,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1505948772520,
                    "endTime": 1505948772646
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 21,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1505948772944,
                    "endTime": 1505948772965
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 110,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1505948772966,
                    "endTime": 1505948773076
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 5,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1505948773299,
                    "endTime": 1505948773304
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1505948773305,
                    "endTime": 1505948773309
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1505948773310,
                    "endTime": 1505948773311
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1505948773311,
                    "endTime": 1505948773314
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 6,
                    "log": [
                        "Error: Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                        "    at assert (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:4709:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:6690:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:12543:33)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"R\"\n  \"e\"\n  \"a\"\n  \"c\"\n  \"t\"\n]"
                        }
                    ],
                    "startTime": 1505948773314,
                    "endTime": 1505948773342
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 11,
                    "log": [
                        "Error: Expected undefined to equal { org: 'facebook', repo: 'react' }",
                        "    at assert (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:4709:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:6690:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:12550:33)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"facebook\"\n  \"repo\": \"react\"\n}"
                        }
                    ],
                    "startTime": 1505948773342,
                    "endTime": 1505948773354
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 6,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1505948773354,
                    "endTime": 1505948773361
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:4709:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:6690:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:12608:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1505948773361,
                    "endTime": 1505948773365
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:4709:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:6690:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:12618:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1505948773365,
                    "endTime": 1505948773369
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:4709:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:6690:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:12628:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1505948773369,
                    "endTime": 1505948773372
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:4709:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:6690:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:12638:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1505948773372,
                    "endTime": 1505948773376
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:4709:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:6690:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?26db1ba3f01cf8a26242d510b5a9f13d608d0071:12648:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1505948773376,
                    "endTime": 1505948773379
                }
            ]
        }
    ]
}