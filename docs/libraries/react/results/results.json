{
    "summary": {
        "success": 16,
        "failed": 14,
        "error": false,
        "disconnected": false,
        "exitCode": 1
    },
    "browsers": [
        {
            "browser": {
                "id": "6219629",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:54.0) Gecko/20100101 Firefox/54.0",
                "name": "Firefox 54.0.0 (Mac OS X 10.12.0)",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 1134,
                    "netTime": 520,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 97,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503891346885,
                    "endTime": 1503891346988
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 8,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503891347001,
                    "endTime": 1503891347010
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 21,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503891347013,
                    "endTime": 1503891347034
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 165,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503891347080,
                    "endTime": 1503891347246
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 26,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503891347266,
                    "endTime": 1503891347293
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 8,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503891347295,
                    "endTime": 1503891347304
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 7,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503891347310,
                    "endTime": 1503891347317
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 9,
                    "log": [
                        "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                        "assert@base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:4709:9",
                        "toEqual@base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:6690:10",
                        "@base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:12543:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"R\"\n  \"e\"\n  \"a\"\n  \"c\"\n  \"t\"\n]"
                        }
                    ],
                    "startTime": 1503891347319,
                    "endTime": 1503891347332
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                        "assert@base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:4709:9",
                        "toEqual@base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:6690:10",
                        "@base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:12550:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"facebook\"\n  \"repo\": \"react\"\n}"
                        }
                    ],
                    "startTime": 1503891347333,
                    "endTime": 1503891347346
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 93,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503891347389,
                    "endTime": 1503891347483
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 22,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:4709:9",
                        "toEqual@base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:6690:10",
                        "@base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:12608:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1503891347491,
                    "endTime": 1503891347597
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 8,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:4709:9",
                        "toEqual@base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:6690:10",
                        "@base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:12618:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1503891347598,
                    "endTime": 1503891347612
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 23,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:4709:9",
                        "toEqual@base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:6690:10",
                        "@base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:12628:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1503891347666,
                    "endTime": 1503891347690
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 11,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:4709:9",
                        "toEqual@base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:6690:10",
                        "@base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:12638:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1503891347715,
                    "endTime": 1503891347726
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 18,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:4709:9",
                        "toEqual@base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:6690:10",
                        "@base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:12648:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1503891347727,
                    "endTime": 1503891347747
                }
            ]
        },
        {
            "browser": {
                "id": "84708219",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/60.0.3112.101 Safari/537.36",
                "name": "HeadlessChrome 0.0.0 (Mac OS X 10.12.6)",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 505,
                    "netTime": 287,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 30,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503891340824,
                    "endTime": 1503891340857
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503891340858,
                    "endTime": 1503891340862
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 8,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503891340862,
                    "endTime": 1503891340870
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 5,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503891340884,
                    "endTime": 1503891340889
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503891340890,
                    "endTime": 1503891340891
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503891340892,
                    "endTime": 1503891340893
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 121,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503891340893,
                    "endTime": 1503891341014
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 32,
                    "log": [
                        "Error: Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                        "    at assert (base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:4709:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:6690:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:12543:33)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"R\"\n  \"e\"\n  \"a\"\n  \"c\"\n  \"t\"\n]"
                        }
                    ],
                    "startTime": 1503891341066,
                    "endTime": 1503891341214
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Error: Expected undefined to equal { org: 'facebook', repo: 'react' }",
                        "    at assert (base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:4709:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:6690:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:12550:33)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"facebook\"\n  \"repo\": \"react\"\n}"
                        }
                    ],
                    "startTime": 1503891341216,
                    "endTime": 1503891341220
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 12,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1503891341221,
                    "endTime": 1503891341233
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:4709:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:6690:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:12608:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1503891341233,
                    "endTime": 1503891341237
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:4709:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:6690:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:12618:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1503891341238,
                    "endTime": 1503891341240
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 50,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:4709:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:6690:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:12628:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1503891341240,
                    "endTime": 1503891341291
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:4709:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:6690:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:12638:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1503891341292,
                    "endTime": 1503891341295
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 14,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:4709:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:6690:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?a7f5b22ce56f9cd35a363dbc87dbec18383b108b:12648:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1503891341296,
                    "endTime": 1503891341315
                }
            ]
        }
    ]
}