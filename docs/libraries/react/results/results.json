{
    "summary": {
        "success": 16,
        "failed": 14,
        "error": false,
        "disconnected": false,
        "exitCode": 1
    },
    "browsers": [
        {
            "browser": {
                "id": "39553828",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/62.0.3202.75 Safari/537.36",
                "name": "HeadlessChrome 0.0.0 (Mac OS X 10.12.6)",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 575,
                    "netTime": 298,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 127,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388810327,
                    "endTime": 1509388810456
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388810484,
                    "endTime": 1509388810488
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 46,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388810488,
                    "endTime": 1509388810535
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 7,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388810615,
                    "endTime": 1509388810622
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 8,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388810623,
                    "endTime": 1509388810631
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 2,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388810632,
                    "endTime": 1509388810634
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388810635,
                    "endTime": 1509388810635
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Error: Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                        "    at assert (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:776:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:1133:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:2201:33)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"R\"\n  \"e\"\n  \"a\"\n  \"c\"\n  \"t\"\n]"
                        }
                    ],
                    "startTime": 1509388810636,
                    "endTime": 1509388810734
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Error: Expected undefined to equal { org: 'facebook', repo: 'react' }",
                        "    at assert (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:776:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:1133:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:2208:33)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"facebook\"\n  \"repo\": \"react\"\n}"
                        }
                    ],
                    "startTime": 1509388810751,
                    "endTime": 1509388810754
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388810754,
                    "endTime": 1509388810758
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 86,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:776:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:1133:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:2266:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1509388810759,
                    "endTime": 1509388810862
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 5,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:776:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:1133:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:2276:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1509388810869,
                    "endTime": 1509388810874
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:776:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:1133:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:2286:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1509388810874,
                    "endTime": 1509388810877
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:776:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:1133:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:2296:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1509388810877,
                    "endTime": 1509388810879
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:776:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:1133:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:2306:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1509388810880,
                    "endTime": 1509388810882
                }
            ]
        },
        {
            "browser": {
                "id": "41885778",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:56.0) Gecko/20100101 Firefox/56.0",
                "name": "Firefox 56.0.0 (Mac OS X 10.12.0)",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 2020,
                    "netTime": 411,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 86,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388816949,
                    "endTime": 1509388817036
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 20,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388817041,
                    "endTime": 1509388817061
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 23,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388817163,
                    "endTime": 1509388817187
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 27,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388817656,
                    "endTime": 1509388817684
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 22,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388817687,
                    "endTime": 1509388817709
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388817712,
                    "endTime": 1509388817716
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388817716,
                    "endTime": 1509388817720
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 57,
                    "log": [
                        "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                        "assert@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:776:9",
                        "toEqual@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:1133:10",
                        "@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:2201:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"R\"\n  \"e\"\n  \"a\"\n  \"c\"\n  \"t\"\n]"
                        }
                    ],
                    "startTime": 1509388817721,
                    "endTime": 1509388817781
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 86,
                    "log": [
                        "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                        "assert@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:776:9",
                        "toEqual@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:1133:10",
                        "@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:2208:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"facebook\"\n  \"repo\": \"react\"\n}"
                        }
                    ],
                    "startTime": 1509388818192,
                    "endTime": 1509388818279
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 18,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388818281,
                    "endTime": 1509388818299
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 11,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:776:9",
                        "toEqual@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:1133:10",
                        "@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:2266:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1509388818698,
                    "endTime": 1509388818711
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 6,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:776:9",
                        "toEqual@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:1133:10",
                        "@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:2276:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1509388818712,
                    "endTime": 1509388818718
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 26,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:776:9",
                        "toEqual@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:1133:10",
                        "@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:2286:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1509388818719,
                    "endTime": 1509388818746
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 13,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:776:9",
                        "toEqual@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:1133:10",
                        "@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:2296:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1509388818747,
                    "endTime": 1509388818761
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 9,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:776:9",
                        "toEqual@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:1133:10",
                        "@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:2306:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1509388818762,
                    "endTime": 1509388818773
                }
            ]
        }
    ],
    "library": {
        "name": "react",
        "version": "16.0.0"
    }
}