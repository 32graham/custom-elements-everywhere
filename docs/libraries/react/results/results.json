{
    "summary": {
        "success": 16,
        "failed": 14,
        "error": false,
        "disconnected": false,
        "exitCode": 1
    },
    "browsers": [
        {
            "browser": {
                "id": "63586532",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/62.0.3202.94 Safari/537.36",
                "name": "HeadlessChrome 0.0.0 (Mac OS X 10.12.6)",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 344,
                    "netTime": 226,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 88,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1510878547264,
                    "endTime": 1510878547354
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 2,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1510878547359,
                    "endTime": 1510878547362
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 7,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1510878547375,
                    "endTime": 1510878547382
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1510878547386,
                    "endTime": 1510878547391
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1510878547391,
                    "endTime": 1510878547395
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1510878547395,
                    "endTime": 1510878547396
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1510878547396,
                    "endTime": 1510878547397
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "Error: Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                        "    at assert (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:776:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:1133:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:2201:33)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"R\"\n  \"e\"\n  \"a\"\n  \"c\"\n  \"t\"\n]"
                        }
                    ],
                    "startTime": 1510878547398,
                    "endTime": 1510878547464
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "Error: Expected undefined to equal { org: 'facebook', repo: 'react' }",
                        "    at assert (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:776:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:1133:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:2208:33)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"facebook\"\n  \"repo\": \"react\"\n}"
                        }
                    ],
                    "startTime": 1510878547465,
                    "endTime": 1510878547468
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 15,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1510878547469,
                    "endTime": 1510878547484
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:776:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:1133:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:2266:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1510878547484,
                    "endTime": 1510878547488
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:776:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:1133:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:2276:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1510878547490,
                    "endTime": 1510878547494
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 5,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:776:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:1133:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:2286:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1510878547494,
                    "endTime": 1510878547499
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:776:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:1133:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:2296:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1510878547500,
                    "endTime": 1510878547503
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 84,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:776:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:1133:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:2306:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1510878547504,
                    "endTime": 1510878547588
                }
            ]
        },
        {
            "browser": {
                "id": "75015192",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:57.0) Gecko/20100101 Firefox/57.0",
                "name": "Firefox 57.0.0 (Mac OS X 10.12.0)",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 530,
                    "netTime": 324,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 23,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1510878550492,
                    "endTime": 1510878550517
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 10,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1510878550525,
                    "endTime": 1510878550536
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 89,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1510878550538,
                    "endTime": 1510878550627
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 29,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1510878550642,
                    "endTime": 1510878550672
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1510878550674,
                    "endTime": 1510878550678
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 2,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1510878550679,
                    "endTime": 1510878550682
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1510878550683,
                    "endTime": 1510878550687
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 31,
                    "log": [
                        "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                        "assert@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:776:9",
                        "toEqual@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:1133:10",
                        "@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:2201:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"R\"\n  \"e\"\n  \"a\"\n  \"c\"\n  \"t\"\n]"
                        }
                    ],
                    "startTime": 1510878550688,
                    "endTime": 1510878550736
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                        "assert@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:776:9",
                        "toEqual@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:1133:10",
                        "@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:2208:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"facebook\"\n  \"repo\": \"react\"\n}"
                        }
                    ],
                    "startTime": 1510878550737,
                    "endTime": 1510878550742
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 28,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1510878550761,
                    "endTime": 1510878550790
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 12,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:776:9",
                        "toEqual@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:1133:10",
                        "@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:2266:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1510878550791,
                    "endTime": 1510878550805
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 8,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:776:9",
                        "toEqual@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:1133:10",
                        "@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:2276:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1510878550806,
                    "endTime": 1510878550814
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 9,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:776:9",
                        "toEqual@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:1133:10",
                        "@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:2286:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1510878550815,
                    "endTime": 1510878550825
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 6,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:776:9",
                        "toEqual@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:1133:10",
                        "@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:2296:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1510878550825,
                    "endTime": 1510878550832
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 66,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:776:9",
                        "toEqual@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:1133:10",
                        "@base/tests.webpack.js?4ced9f4a27b3543a3dac93def1e29dbaeb06842c:2306:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1510878550833,
                    "endTime": 1510878550899
                }
            ]
        }
    ],
    "library": {
        "name": "react",
        "version": "16.1.1"
    }
}