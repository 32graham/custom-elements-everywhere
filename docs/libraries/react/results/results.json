{
    "summary": {
        "success": 16,
        "failed": 14,
        "error": false,
        "disconnected": false,
        "exitCode": 1
    },
    "browsers": [
        {
            "browser": {
                "id": "54679999",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/60.0.3112.90 Safari/537.36",
                "name": "HeadlessChrome 0.0.0 (Mac OS X 10.12.6)",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 409,
                    "netTime": 180,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 64,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1502572370082,
                    "endTime": 1502572370154
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 5,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1502572370161,
                    "endTime": 1502572370166
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 29,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1502572370168,
                    "endTime": 1502572370197
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 7,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1502572370250,
                    "endTime": 1502572370257
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 7,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1502572370258,
                    "endTime": 1502572370265
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1502572370266,
                    "endTime": 1502572370269
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1502572370269,
                    "endTime": 1502572370273
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 23,
                    "log": [
                        "Error: Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                        "    at assert (base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:4709:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:6690:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:12459:33)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"R\"\n  \"e\"\n  \"a\"\n  \"c\"\n  \"t\"\n]"
                        }
                    ],
                    "startTime": 1502572370274,
                    "endTime": 1502572370336
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Error: Expected undefined to equal { org: 'facebook', repo: 'react' }",
                        "    at assert (base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:4709:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:6690:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:12466:33)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"facebook\"\n  \"repo\": \"react\"\n}"
                        }
                    ],
                    "startTime": 1502572370336,
                    "endTime": 1502572370338
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 7,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1502572370338,
                    "endTime": 1502572370346
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 8,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:4709:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:6690:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:12524:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1502572370346,
                    "endTime": 1502572370355
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 10,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:4709:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:6690:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:12534:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1502572370404,
                    "endTime": 1502572370414
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 7,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:4709:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:6690:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:12544:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1502572370416,
                    "endTime": 1502572370431
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:4709:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:6690:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:12554:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1502572370432,
                    "endTime": 1502572370445
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:4709:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:6690:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:12564:48)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1502572370446,
                    "endTime": 1502572370450
                }
            ]
        },
        {
            "browser": {
                "id": "61220183",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:54.0) Gecko/20100101 Firefox/54.0",
                "name": "Firefox 54.0.0 (Mac OS X 10.12.0)",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 171,
                    "netTime": 166,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 22,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1502572373940,
                    "endTime": 1502572373966
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 14,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1502572373968,
                    "endTime": 1502572373983
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 19,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1502572373986,
                    "endTime": 1502572374005
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 23,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1502572374031,
                    "endTime": 1502572374055
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 6,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1502572374057,
                    "endTime": 1502572374065
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 6,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1502572374066,
                    "endTime": 1502572374074
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1502572374075,
                    "endTime": 1502572374079
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 7,
                    "log": [
                        "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                        "assert@base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:4709:9",
                        "toEqual@base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:6690:10",
                        "@base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:12459:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"R\"\n  \"e\"\n  \"a\"\n  \"c\"\n  \"t\"\n]"
                        }
                    ],
                    "startTime": 1502572374081,
                    "endTime": 1502572374090
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 6,
                    "log": [
                        "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                        "assert@base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:4709:9",
                        "toEqual@base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:6690:10",
                        "@base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:12466:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"facebook\"\n  \"repo\": \"react\"\n}"
                        }
                    ],
                    "startTime": 1502572374091,
                    "endTime": 1502572374098
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 11,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1502572374100,
                    "endTime": 1502572374112
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 13,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:4709:9",
                        "toEqual@base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:6690:10",
                        "@base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:12524:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1502572374114,
                    "endTime": 1502572374129
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 7,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:4709:9",
                        "toEqual@base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:6690:10",
                        "@base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:12534:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1502572374142,
                    "endTime": 1502572374150
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 10,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:4709:9",
                        "toEqual@base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:6690:10",
                        "@base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:12544:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1502572374154,
                    "endTime": 1502572374165
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 8,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:4709:9",
                        "toEqual@base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:6690:10",
                        "@base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:12554:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1502572374166,
                    "endTime": 1502572374175
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 10,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:4709:9",
                        "toEqual@base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:6690:10",
                        "@base/tests.webpack.js?048fd2ccd3eac7fb24b91386a4fb169accb229d2:12564:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1502572374176,
                    "endTime": 1502572374187
                }
            ]
        }
    ]
}