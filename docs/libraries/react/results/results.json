{
    "summary": {
        "success": 16,
        "failed": 14,
        "error": false,
        "disconnected": false,
        "exitCode": 1,
        "score": 71,
        "basicSupport": {
            "total": 16,
            "failed": 0,
            "passed": 16
        },
        "advancedSupport": {
            "total": 14,
            "failed": 14,
            "passed": 0
        }
    },
    "browsers": [
        {
            "browser": {
                "id": "39234904",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:57.0) Gecko/20100101 Firefox/57.0",
                "name": "Firefox 57.0.0 (Mac OS X 10.12.0)",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 1056,
                    "netTime": 526,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "basic support",
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 29,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512058272697,
                    "endTime": 1512058272728,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 37,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512058272736,
                    "endTime": 1512058272774,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 163,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512058272778,
                    "endTime": 1512058272957,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 39,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512058272973,
                    "endTime": 1512058273013,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 7,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512058273015,
                    "endTime": 1512058273022,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512058273023,
                    "endTime": 1512058273026,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512058273027,
                    "endTime": 1512058273032,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "basic support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 24,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512058273033,
                    "endTime": 1512058273058,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 8,
                    "log": [
                        "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                        "assert@base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:690:9",
                        "toEqual@base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:1165:10",
                        "@base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:24556:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"R\"\n  \"e\"\n  \"a\"\n  \"c\"\n  \"t\"\n]"
                        }
                    ],
                    "startTime": 1512058273059,
                    "endTime": 1512058273154,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 12,
                    "log": [
                        "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                        "assert@base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:690:9",
                        "toEqual@base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:1165:10",
                        "@base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:24564:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"facebook\"\n  \"repo\": \"react\"\n}"
                        }
                    ],
                    "startTime": 1512058273181,
                    "endTime": 1512058273197,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 109,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:690:9",
                        "toEqual@base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:1165:10",
                        "@base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:24577:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512058273200,
                    "endTime": 1512058273310,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 8,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:690:9",
                        "toEqual@base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:1165:10",
                        "@base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:24588:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512058273326,
                    "endTime": 1512058273334,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 13,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:690:9",
                        "toEqual@base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:1165:10",
                        "@base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:24599:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512058273335,
                    "endTime": 1512058273349,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 31,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:690:9",
                        "toEqual@base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:1165:10",
                        "@base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:24610:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512058273361,
                    "endTime": 1512058273393,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 39,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:690:9",
                        "toEqual@base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:1165:10",
                        "@base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:24621:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512058273402,
                    "endTime": 1512058273442,
                    "weight": 1
                }
            ]
        },
        {
            "browser": {
                "id": "95176029",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/62.0.3202.94 Safari/537.36",
                "name": "HeadlessChrome 0.0.0 (Mac OS X 10.12.6)",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 912,
                    "netTime": 434,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "basic support",
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 211,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512058267014,
                    "endTime": 1512058267244,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512058267342,
                    "endTime": 1512058267346,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512058267346,
                    "endTime": 1512058267352,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 8,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512058267367,
                    "endTime": 1512058267375,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512058267376,
                    "endTime": 1512058267379,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512058267379,
                    "endTime": 1512058267380,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512058267380,
                    "endTime": 1512058267381,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "basic support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 9,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512058267381,
                    "endTime": 1512058267390,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "Error: Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                        "    at assert (base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:1165:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:24556:35)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"R\"\n  \"e\"\n  \"a\"\n  \"c\"\n  \"t\"\n]"
                        }
                    ],
                    "startTime": 1512058267390,
                    "endTime": 1512058267401,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "advanced support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Error: Expected undefined to equal { org: 'facebook', repo: 'react' }",
                        "    at assert (base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:1165:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:24564:35)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"facebook\"\n  \"repo\": \"react\"\n}"
                        }
                    ],
                    "startTime": 1512058267401,
                    "endTime": 1512058267403,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 175,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:1165:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:24577:50)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512058267404,
                    "endTime": 1512058267580,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 7,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:1165:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:24588:50)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512058267719,
                    "endTime": 1512058267726,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:1165:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:24599:50)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512058267726,
                    "endTime": 1512058267729,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:1165:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:24610:50)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512058267729,
                    "endTime": 1512058267731,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:1165:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?36805552d3454c5cec96f81f82dea4d97adb8bee:24621:50)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512058267732,
                    "endTime": 1512058267734,
                    "weight": 1
                }
            ]
        }
    ],
    "library": {
        "name": "react",
        "version": "16.1.1"
    }
}