{
    "summary": {
        "success": 16,
        "failed": 14,
        "error": false,
        "disconnected": false,
        "exitCode": 1,
        "score": 71,
        "basicSupport": {
            "total": 20,
            "failed": 4,
            "passed": 16
        },
        "advancedSupport": {
            "total": 10,
            "failed": 10,
            "passed": 0
        }
    },
    "browsers": [
        {
            "browser": {
                "id": "11902376",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:57.0) Gecko/20100101 Firefox/57.0",
                "name": "Firefox 57.0.0 (Mac OS X 10.12.0)",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 910,
                    "netTime": 345,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "basic support",
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 53,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512048841785,
                    "endTime": 1512048841840,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 11,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512048841843,
                    "endTime": 1512048841855,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 34,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512048841857,
                    "endTime": 1512048841892,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 44,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512048841958,
                    "endTime": 1512048842002,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 5,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512048842004,
                    "endTime": 1512048842015,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 7,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512048842021,
                    "endTime": 1512048842030,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 5,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512048842032,
                    "endTime": 1512048842037,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 8,
                    "log": [
                        "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                        "assert@base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:690:9",
                        "toEqual@base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:1165:10",
                        "@base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:2655:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"R\"\n  \"e\"\n  \"a\"\n  \"c\"\n  \"t\"\n]"
                        }
                    ],
                    "startTime": 1512048842038,
                    "endTime": 1512048842049,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 5,
                    "log": [
                        "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                        "assert@base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:690:9",
                        "toEqual@base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:1165:10",
                        "@base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:2663:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"facebook\"\n  \"repo\": \"react\"\n}"
                        }
                    ],
                    "startTime": 1512048842050,
                    "endTime": 1512048842055,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "basic support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 12,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512048842358,
                    "endTime": 1512048842371,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 19,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:690:9",
                        "toEqual@base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:1165:10",
                        "@base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:24575:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512048842373,
                    "endTime": 1512048842420,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 45,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:690:9",
                        "toEqual@base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:1165:10",
                        "@base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:24586:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512048842422,
                    "endTime": 1512048842467,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 7,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:690:9",
                        "toEqual@base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:1165:10",
                        "@base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:24597:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512048842490,
                    "endTime": 1512048842497,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 74,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:690:9",
                        "toEqual@base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:1165:10",
                        "@base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:24608:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512048842518,
                    "endTime": 1512048842594,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 16,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:690:9",
                        "toEqual@base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:1165:10",
                        "@base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:24619:8",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512048842626,
                    "endTime": 1512048842646,
                    "weight": 1
                }
            ]
        },
        {
            "browser": {
                "id": "83942221",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/62.0.3202.94 Safari/537.36",
                "name": "HeadlessChrome 0.0.0 (Mac OS X 10.12.6)",
                "state": 5,
                "lastResult": {
                    "success": 8,
                    "failed": 7,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 639,
                    "netTime": 260,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "basic support",
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 153,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512048837887,
                    "endTime": 1512048838044,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512048838058,
                    "endTime": 1512048838063,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 26,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512048838065,
                    "endTime": 1512048838093,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "basic support",
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 5,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512048838221,
                    "endTime": 1512048838227,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 2,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512048838227,
                    "endTime": 1512048838229,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512048838229,
                    "endTime": 1512048838230,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512048838230,
                    "endTime": 1512048838231,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 18,
                    "log": [
                        "Error: Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                        "    at assert (base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:1165:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:2655:35)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"R\"\n  \"e\"\n  \"a\"\n  \"c\"\n  \"t\"\n]"
                        }
                    ],
                    "startTime": 1512048838232,
                    "endTime": 1512048838287,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "basic support",
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 18,
                    "log": [
                        "Error: Expected undefined to equal { org: 'facebook', repo: 'react' }",
                        "    at assert (base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:1165:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:2663:35)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"facebook\"\n  \"repo\": \"react\"\n}"
                        }
                    ],
                    "startTime": 1512048838290,
                    "endTime": 1512048838319,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "basic support",
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 6,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1512048838464,
                    "endTime": 1512048838470,
                    "weight": 3
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 5,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:1165:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:24575:50)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512048838470,
                    "endTime": 1512048838475,
                    "weight": 2
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:1165:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:24586:50)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512048838476,
                    "endTime": 1512048838480,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 8,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:1165:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:24597:50)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512048838481,
                    "endTime": 1512048838489,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 8,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:1165:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:24608:50)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512048838490,
                    "endTime": 1512048838498,
                    "weight": 1
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "advanced support",
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:690:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:1165:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?64efb03e6aba621cd561a1da57b9d96c5a03b766:24619:50)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1512048838502,
                    "endTime": 1512048838505,
                    "weight": 1
                }
            ]
        }
    ],
    "library": {
        "name": "react",
        "version": "16.1.1"
    }
}