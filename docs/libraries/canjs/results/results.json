{
    "summary": {
        "success": 26,
        "failed": 4,
        "error": false,
        "disconnected": false,
        "exitCode": 1
    },
    "browsers": [
        {
            "browser": {
                "id": "43641390",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/62.0.3202.75 Safari/537.36",
                "name": "HeadlessChrome 0.0.0 (Mac OS X 10.12.6)",
                "state": 5,
                "lastResult": {
                    "success": 13,
                    "failed": 2,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 1016,
                    "netTime": 249,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 12,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388813603,
                    "endTime": 1509388813619
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388813621,
                    "endTime": 1509388813624
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 12,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388813625,
                    "endTime": 1509388813637
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 27,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388813896,
                    "endTime": 1509388813923
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 5,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388813923,
                    "endTime": 1509388813928
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388813928,
                    "endTime": 1509388813931
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388813932,
                    "endTime": 1509388813935
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "Error: Expected undefined to equal [ 'C', 'a', 'n', 'j', 's' ]",
                        "    at assert (base/tests.webpack.js?8cac763e952a6088feff8eaed92384395e533c00:12365:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?8cac763e952a6088feff8eaed92384395e533c00:16544:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?8cac763e952a6088feff8eaed92384395e533c00:17816:58)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'C', 'a', 'n', 'j', 's' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"C\"\n  \"a\"\n  \"n\"\n  \"j\"\n  \"s\"\n]"
                        }
                    ],
                    "startTime": 1509388813935,
                    "endTime": 1509388814069
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 35,
                    "log": [
                        "Error: Expected undefined to equal { org: 'canjs', repo: 'CanJS' }",
                        "    at assert (base/tests.webpack.js?8cac763e952a6088feff8eaed92384395e533c00:12365:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?8cac763e952a6088feff8eaed92384395e533c00:16544:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?8cac763e952a6088feff8eaed92384395e533c00:17823:58)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'canjs', repo: 'CanJS' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"canjs\"\n  \"repo\": \"CanJS\"\n}"
                        }
                    ],
                    "startTime": 1509388814094,
                    "endTime": 1509388814130
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 13,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388814132,
                    "endTime": 1509388814145
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 99,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388814196,
                    "endTime": 1509388814311
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 20,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388814318,
                    "endTime": 1509388814338
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388814338,
                    "endTime": 1509388814342
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 6,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388814342,
                    "endTime": 1509388814348
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388814349,
                    "endTime": 1509388814352
                }
            ]
        },
        {
            "browser": {
                "id": "45600608",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:56.0) Gecko/20100101 Firefox/56.0",
                "name": "Firefox 56.0.0 (Mac OS X 10.12.0)",
                "state": 5,
                "lastResult": {
                    "success": 13,
                    "failed": 2,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 1014,
                    "netTime": 531,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 55,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388819351,
                    "endTime": 1509388819407
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 11,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388819409,
                    "endTime": 1509388819421
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 92,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388819424,
                    "endTime": 1509388819516
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 87,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388819594,
                    "endTime": 1509388819682
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 28,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388819685,
                    "endTime": 1509388819713
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 16,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388819768,
                    "endTime": 1509388819784
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 8,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388819784,
                    "endTime": 1509388819793
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 9,
                    "log": [
                        "Expected undefined to equal [ 'C', 'a', 'n', 'j', 's' ]",
                        "assert@base/tests.webpack.js?8cac763e952a6088feff8eaed92384395e533c00:12365:9",
                        "toEqual@base/tests.webpack.js?8cac763e952a6088feff8eaed92384395e533c00:16544:10",
                        "@base/tests.webpack.js?8cac763e952a6088feff8eaed92384395e533c00:17816:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'C', 'a', 'n', 'j', 's' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"C\"\n  \"a\"\n  \"n\"\n  \"j\"\n  \"s\"\n]"
                        }
                    ],
                    "startTime": 1509388819794,
                    "endTime": 1509388819807
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 10,
                    "log": [
                        "Expected undefined to equal { org: 'canjs', repo: 'CanJS' }",
                        "assert@base/tests.webpack.js?8cac763e952a6088feff8eaed92384395e533c00:12365:9",
                        "toEqual@base/tests.webpack.js?8cac763e952a6088feff8eaed92384395e533c00:16544:10",
                        "@base/tests.webpack.js?8cac763e952a6088feff8eaed92384395e533c00:17823:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'canjs', repo: 'CanJS' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"canjs\"\n  \"repo\": \"CanJS\"\n}"
                        }
                    ],
                    "startTime": 1509388819808,
                    "endTime": 1509388819819
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 26,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388819821,
                    "endTime": 1509388819847
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 34,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388820007,
                    "endTime": 1509388820041
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 65,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388820042,
                    "endTime": 1509388820108
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 30,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388820174,
                    "endTime": 1509388820205
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 17,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388820206,
                    "endTime": 1509388820224
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 43,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509388820226,
                    "endTime": 1509388820269
                }
            ]
        }
    ],
    "library": {
        "name": "can-component",
        "version": "3.3.5"
    }
}