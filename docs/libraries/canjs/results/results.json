{
    "summary": {
        "success": 26,
        "failed": 4,
        "error": false,
        "disconnected": false,
        "exitCode": 1
    },
    "browsers": [
        {
            "browser": {
                "id": "31573420",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:56.0) Gecko/20100101 Firefox/56.0",
                "name": "Firefox 56.0.0 (Mac OS X 10.12.0)",
                "state": 5,
                "lastResult": {
                    "success": 13,
                    "failed": 2,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 1169,
                    "netTime": 562,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 24,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509166674037,
                    "endTime": 1509166674066
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 22,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509166674067,
                    "endTime": 1509166674090
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 95,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509166674095,
                    "endTime": 1509166674191
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 64,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509166674344,
                    "endTime": 1509166674408
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 12,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509166674422,
                    "endTime": 1509166674435
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 13,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509166674435,
                    "endTime": 1509166674449
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 14,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509166674559,
                    "endTime": 1509166674574
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 9,
                    "log": [
                        "Expected undefined to equal [ 'C', 'a', 'n', 'j', 's' ]",
                        "assert@base/tests.webpack.js?8cac763e952a6088feff8eaed92384395e533c00:12365:9",
                        "toEqual@base/tests.webpack.js?8cac763e952a6088feff8eaed92384395e533c00:16544:10",
                        "@base/tests.webpack.js?8cac763e952a6088feff8eaed92384395e533c00:17816:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'C', 'a', 'n', 'j', 's' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"C\"\n  \"a\"\n  \"n\"\n  \"j\"\n  \"s\"\n]"
                        }
                    ],
                    "startTime": 1509166674575,
                    "endTime": 1509166674587
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 8,
                    "log": [
                        "Expected undefined to equal { org: 'canjs', repo: 'CanJS' }",
                        "assert@base/tests.webpack.js?8cac763e952a6088feff8eaed92384395e533c00:12365:9",
                        "toEqual@base/tests.webpack.js?8cac763e952a6088feff8eaed92384395e533c00:16544:10",
                        "@base/tests.webpack.js?8cac763e952a6088feff8eaed92384395e533c00:17823:5",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'canjs', repo: 'CanJS' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"canjs\"\n  \"repo\": \"CanJS\"\n}"
                        }
                    ],
                    "startTime": 1509166674588,
                    "endTime": 1509166674596
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 35,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509166674597,
                    "endTime": 1509166674634
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 58,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509166674747,
                    "endTime": 1509166674806
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 112,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509166674806,
                    "endTime": 1509166674919
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 59,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509166675001,
                    "endTime": 1509166675063
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 18,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509166675064,
                    "endTime": 1509166675082
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 19,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509166675083,
                    "endTime": 1509166675102
                }
            ]
        },
        {
            "browser": {
                "id": "80425649",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/62.0.3202.75 Safari/537.36",
                "name": "HeadlessChrome 0.0.0 (Mac OS X 10.12.6)",
                "state": 5,
                "lastResult": {
                    "success": 13,
                    "failed": 2,
                    "skipped": 0,
                    "total": 15,
                    "totalTime": 3024,
                    "netTime": 374,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 11,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509166659939,
                    "endTime": 1509166659953
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509166659954,
                    "endTime": 1509166659958
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 12,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509166659958,
                    "endTime": 1509166659971
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 16,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509166659987,
                    "endTime": 1509166660003
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 240,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509166660004,
                    "endTime": 1509166660244
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 8,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509166660380,
                    "endTime": 1509166660388
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 9,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509166660389,
                    "endTime": 1509166660398
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 8,
                    "log": [
                        "Error: Expected undefined to equal [ 'C', 'a', 'n', 'j', 's' ]",
                        "    at assert (base/tests.webpack.js?8cac763e952a6088feff8eaed92384395e533c00:12365:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?8cac763e952a6088feff8eaed92384395e533c00:16544:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?8cac763e952a6088feff8eaed92384395e533c00:17816:58)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'C', 'a', 'n', 'j', 's' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"C\"\n  \"a\"\n  \"n\"\n  \"j\"\n  \"s\"\n]"
                        }
                    ],
                    "startTime": 1509166660399,
                    "endTime": 1509166660560
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "Error: Expected undefined to equal { org: 'canjs', repo: 'CanJS' }",
                        "    at assert (base/tests.webpack.js?8cac763e952a6088feff8eaed92384395e533c00:12365:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?8cac763e952a6088feff8eaed92384395e533c00:16544:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?8cac763e952a6088feff8eaed92384395e533c00:17823:58)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'canjs', repo: 'CanJS' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"canjs\"\n  \"repo\": \"CanJS\"\n}"
                        }
                    ],
                    "startTime": 1509166660585,
                    "endTime": 1509166660591
                },
                {
                    "id": "",
                    "description": "can imperatively listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 15,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509166660591,
                    "endTime": 1509166660606
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 27,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509166660716,
                    "endTime": 1509166660746
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 8,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509166660746,
                    "endTime": 1509166660754
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509166660754,
                    "endTime": 1509166660758
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509166660758,
                    "endTime": 1509166660762
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 4,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1509166660763,
                    "endTime": 1509166660767
                }
            ]
        }
    ],
    "library": {
        "name": "can-component",
        "version": "3.3.5"
    }
}