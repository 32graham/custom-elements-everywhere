{
    "summary": {
        "success": 14,
        "failed": 6,
        "error": false,
        "disconnected": false,
        "exitCode": 1
    },
    "browsers": [
        {
            "browser": {
                "id": "8550982",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:54.0) Gecko/20100101 Firefox/54.0",
                "name": "Firefox 54.0.0 (Mac OS X 10.12.0)",
                "state": 5,
                "lastResult": {
                    "success": 7,
                    "failed": 3,
                    "skipped": 0,
                    "total": 10,
                    "totalTime": 145,
                    "netTime": 79,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 10,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501277026025,
                    "endTime": 1501277026037
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 6,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501277026038,
                    "endTime": 1501277026045
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 17,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501277026049,
                    "endTime": 1501277026067
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 25,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501277026081,
                    "endTime": 1501277026107
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501277026108,
                    "endTime": 1501277026111
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 7,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501277026111,
                    "endTime": 1501277026119
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501277026121,
                    "endTime": 1501277026123
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                        "assert@base/tests.webpack.js?6af7de6d9a261ae83e3a60131b72024ce45c805b:4711:9",
                        "toEqual@base/tests.webpack.js?6af7de6d9a261ae83e3a60131b72024ce45c805b:6692:10",
                        "@base/tests.webpack.js?6af7de6d9a261ae83e3a60131b72024ce45c805b:12296:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"R\"\n  \"e\"\n  \"a\"\n  \"c\"\n  \"t\"\n]"
                        }
                    ],
                    "startTime": 1501277026124,
                    "endTime": 1501277026130
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                        "assert@base/tests.webpack.js?6af7de6d9a261ae83e3a60131b72024ce45c805b:4711:9",
                        "toEqual@base/tests.webpack.js?6af7de6d9a261ae83e3a60131b72024ce45c805b:6692:10",
                        "@base/tests.webpack.js?6af7de6d9a261ae83e3a60131b72024ce45c805b:12303:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"facebook\"\n  \"repo\": \"react\"\n}"
                        }
                    ],
                    "startTime": 1501277026131,
                    "endTime": 1501277026133
                },
                {
                    "id": "",
                    "description": "can listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "Expected 'false' to equal 'true'",
                        "assert@base/tests.webpack.js?6af7de6d9a261ae83e3a60131b72024ce45c805b:4711:9",
                        "toEqual@base/tests.webpack.js?6af7de6d9a261ae83e3a60131b72024ce45c805b:6692:10",
                        "@base/tests.webpack.js?6af7de6d9a261ae83e3a60131b72024ce45c805b:12350:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1501277026135,
                    "endTime": 1501277026140
                }
            ]
        },
        {
            "browser": {
                "id": "76858955",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/59.0.3071.115 Safari/537.36",
                "name": "HeadlessChrome 0.0.0 (Mac OS X 10.12.5)",
                "state": 5,
                "lastResult": {
                    "success": 7,
                    "failed": 3,
                    "skipped": 0,
                    "total": 10,
                    "totalTime": 138,
                    "netTime": 60,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 12,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501277023984,
                    "endTime": 1501277023998
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501277024000,
                    "endTime": 1501277024003
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 8,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501277024003,
                    "endTime": 1501277024011
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 11,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501277024025,
                    "endTime": 1501277024036
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 2,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501277024036,
                    "endTime": 1501277024038
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501277024038,
                    "endTime": 1501277024039
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501277024039,
                    "endTime": 1501277024040
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 13,
                    "log": [
                        "Error: Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                        "    at assert (base/tests.webpack.js?6af7de6d9a261ae83e3a60131b72024ce45c805b:4711:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?6af7de6d9a261ae83e3a60131b72024ce45c805b:6692:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?6af7de6d9a261ae83e3a60131b72024ce45c805b:12296:33)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"R\"\n  \"e\"\n  \"a\"\n  \"c\"\n  \"t\"\n]"
                        }
                    ],
                    "startTime": 1501277024040,
                    "endTime": 1501277024062
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "Error: Expected undefined to equal { org: 'facebook', repo: 'react' }",
                        "    at assert (base/tests.webpack.js?6af7de6d9a261ae83e3a60131b72024ce45c805b:4711:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?6af7de6d9a261ae83e3a60131b72024ce45c805b:6692:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?6af7de6d9a261ae83e3a60131b72024ce45c805b:12303:33)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"facebook\"\n  \"repo\": \"react\"\n}"
                        }
                    ],
                    "startTime": 1501277024063,
                    "endTime": 1501277024068
                },
                {
                    "id": "",
                    "description": "can listen to a DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 6,
                    "log": [
                        "Error: Expected 'false' to equal 'true'",
                        "    at assert (base/tests.webpack.js?6af7de6d9a261ae83e3a60131b72024ce45c805b:4711:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?6af7de6d9a261ae83e3a60131b72024ce45c805b:6692:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?6af7de6d9a261ae83e3a60131b72024ce45c805b:12350:47)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected 'false' to equal 'true'",
                            "showDiff": true,
                            "actual": "\"false\"",
                            "expected": "\"true\""
                        }
                    ],
                    "startTime": 1501277024069,
                    "endTime": 1501277024075
                }
            ]
        }
    ]
}