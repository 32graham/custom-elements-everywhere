{
    "summary": {
        "success": 14,
        "failed": 14,
        "error": false,
        "disconnected": false,
        "exitCode": 1
    },
    "browsers": [
        {
            "browser": {
                "id": "34366313",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_5) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/59.0.3071.115 Safari/537.36",
                "name": "HeadlessChrome 0.0.0 (Mac OS X 10.12.5)",
                "state": 5,
                "lastResult": {
                    "success": 7,
                    "failed": 7,
                    "skipped": 0,
                    "total": 14,
                    "totalTime": 380,
                    "netTime": 269,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 33,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501701767983,
                    "endTime": 1501701768025
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 9,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501701768027,
                    "endTime": 1501701768041
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 17,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501701768042,
                    "endTime": 1501701768059
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 23,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501701768090,
                    "endTime": 1501701768113
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 96,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501701768129,
                    "endTime": 1501701768225
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 1,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501701768230,
                    "endTime": 1501701768231
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 0,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501701768232,
                    "endTime": 1501701768232
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 8,
                    "log": [
                        "Error: Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                        "    at assert (base/tests.webpack.js?810f8c1e06680556785a6d857e4fe18893c10dae:4711:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?810f8c1e06680556785a6d857e4fe18893c10dae:6692:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?810f8c1e06680556785a6d857e4fe18893c10dae:12296:33)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"R\"\n  \"e\"\n  \"a\"\n  \"c\"\n  \"t\"\n]"
                        }
                    ],
                    "startTime": 1501701768233,
                    "endTime": 1501701768252
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 5,
                    "log": [
                        "Error: Expected undefined to equal { org: 'facebook', repo: 'react' }",
                        "    at assert (base/tests.webpack.js?810f8c1e06680556785a6d857e4fe18893c10dae:4711:9)",
                        "    at Expectation.toEqual (base/tests.webpack.js?810f8c1e06680556785a6d857e4fe18893c10dae:6692:30)",
                        "    at Context.<anonymous> (base/tests.webpack.js?810f8c1e06680556785a6d857e4fe18893c10dae:12303:33)"
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"facebook\"\n  \"repo\": \"react\"\n}"
                        }
                    ],
                    "startTime": 1501701768252,
                    "endTime": 1501701768257
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 3,
                    "log": [
                        "TypeError: Cannot read property 'click' of null",
                        "    at Context.<anonymous> (base/tests.webpack.js?810f8c1e06680556785a6d857e4fe18893c10dae:12349:7)"
                    ],
                    "assertionErrors": [],
                    "startTime": 1501701768258,
                    "endTime": 1501701768261
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "TypeError: Cannot read property 'click' of null",
                        "    at Context.<anonymous> (base/tests.webpack.js?810f8c1e06680556785a6d857e4fe18893c10dae:12359:7)"
                    ],
                    "assertionErrors": [],
                    "startTime": 1501701768261,
                    "endTime": 1501701768263
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 60,
                    "log": [
                        "TypeError: Cannot read property 'click' of null",
                        "    at Context.<anonymous> (base/tests.webpack.js?810f8c1e06680556785a6d857e4fe18893c10dae:12369:7)"
                    ],
                    "assertionErrors": [],
                    "startTime": 1501701768264,
                    "endTime": 1501701768326
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 10,
                    "log": [
                        "TypeError: Cannot read property 'click' of null",
                        "    at Context.<anonymous> (base/tests.webpack.js?810f8c1e06680556785a6d857e4fe18893c10dae:12379:7)"
                    ],
                    "assertionErrors": [],
                    "startTime": 1501701768326,
                    "endTime": 1501701768337
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 2,
                    "log": [
                        "TypeError: Cannot read property 'click' of null",
                        "    at Context.<anonymous> (base/tests.webpack.js?810f8c1e06680556785a6d857e4fe18893c10dae:12389:7)"
                    ],
                    "assertionErrors": [],
                    "startTime": 1501701768422,
                    "endTime": 1501701768424
                }
            ]
        },
        {
            "browser": {
                "id": "69723902",
                "fullName": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:54.0) Gecko/20100101 Firefox/54.0",
                "name": "Firefox 54.0.0 (Mac OS X 10.12.0)",
                "state": 5,
                "lastResult": {
                    "success": 7,
                    "failed": 7,
                    "skipped": 0,
                    "total": 14,
                    "totalTime": 225,
                    "netTime": 119,
                    "error": false,
                    "disconnected": false
                },
                "disconnectsCount": 0
            },
            "errors": [],
            "results": [
                {
                    "id": "",
                    "description": "can display a Custom Element with no children",
                    "suite": [
                        "no children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 18,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501701772439,
                    "endTime": 1501701772460
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 9,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501701772463,
                    "endTime": 1501701772473
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in a Shadow Root and pass in Light DOM children",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 14,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501701772474,
                    "endTime": 1501701772488
                },
                {
                    "id": "",
                    "description": "can display a Custom Element with children in the Shadow DOM and handle hiding and showing the element",
                    "suite": [
                        "with children"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 17,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501701772506,
                    "endTime": 1501701772525
                },
                {
                    "id": "",
                    "description": "will pass boolean data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 5,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501701772527,
                    "endTime": 1501701772532
                },
                {
                    "id": "",
                    "description": "will pass numeric data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 5,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501701772534,
                    "endTime": 1501701772540
                },
                {
                    "id": "",
                    "description": "will pass string data as either an attribute or a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": true,
                    "skipped": false,
                    "time": 3,
                    "log": [],
                    "assertionErrors": [],
                    "startTime": 1501701772541,
                    "endTime": 1501701772545
                },
                {
                    "id": "",
                    "description": "will pass array data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 7,
                    "log": [
                        "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                        "assert@base/tests.webpack.js?810f8c1e06680556785a6d857e4fe18893c10dae:4711:9",
                        "toEqual@base/tests.webpack.js?810f8c1e06680556785a6d857e4fe18893c10dae:6692:10",
                        "@base/tests.webpack.js?810f8c1e06680556785a6d857e4fe18893c10dae:12296:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal [ 'R', 'e', 'a', 'c', 't' ]",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "[\n  \"R\"\n  \"e\"\n  \"a\"\n  \"c\"\n  \"t\"\n]"
                        }
                    ],
                    "startTime": 1501701772546,
                    "endTime": 1501701772556
                },
                {
                    "id": "",
                    "description": "will pass object data as a property",
                    "suite": [
                        "attributes and properties"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 4,
                    "log": [
                        "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                        "assert@base/tests.webpack.js?810f8c1e06680556785a6d857e4fe18893c10dae:4711:9",
                        "toEqual@base/tests.webpack.js?810f8c1e06680556785a6d857e4fe18893c10dae:6692:10",
                        "@base/tests.webpack.js?810f8c1e06680556785a6d857e4fe18893c10dae:12303:6",
                        ""
                    ],
                    "assertionErrors": [
                        {
                            "name": "Error",
                            "message": "Expected undefined to equal { org: 'facebook', repo: 'react' }",
                            "showDiff": true,
                            "actual": "[undefined]",
                            "expected": "{\n  \"org\": \"facebook\"\n  \"repo\": \"react\"\n}"
                        }
                    ],
                    "startTime": 1501701772557,
                    "endTime": 1501701772561
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a lowercase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 10,
                    "log": [
                        "wc is null",
                        "@base/tests.webpack.js?810f8c1e06680556785a6d857e4fe18893c10dae:12349:5",
                        ""
                    ],
                    "assertionErrors": [],
                    "startTime": 1501701772564,
                    "endTime": 1501701772574
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a kebab-case DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 8,
                    "log": [
                        "wc is null",
                        "@base/tests.webpack.js?810f8c1e06680556785a6d857e4fe18893c10dae:12359:5",
                        ""
                    ],
                    "assertionErrors": [],
                    "startTime": 1501701772575,
                    "endTime": 1501701772584
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a camelCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 7,
                    "log": [
                        "wc is null",
                        "@base/tests.webpack.js?810f8c1e06680556785a6d857e4fe18893c10dae:12369:5",
                        ""
                    ],
                    "assertionErrors": [],
                    "startTime": 1501701772586,
                    "endTime": 1501701772594
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a CAPScase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 6,
                    "log": [
                        "wc is null",
                        "@base/tests.webpack.js?810f8c1e06680556785a6d857e4fe18893c10dae:12379:5",
                        ""
                    ],
                    "assertionErrors": [],
                    "startTime": 1501701772595,
                    "endTime": 1501701772602
                },
                {
                    "id": "",
                    "description": "can declaratively listen to a PascalCase DOM event dispatched by a Custom Element",
                    "suite": [
                        "events"
                    ],
                    "success": false,
                    "skipped": false,
                    "time": 6,
                    "log": [
                        "wc is null",
                        "@base/tests.webpack.js?810f8c1e06680556785a6d857e4fe18893c10dae:12389:5",
                        ""
                    ],
                    "assertionErrors": [],
                    "startTime": 1501701772620,
                    "endTime": 1501701772627
                }
            ]
        }
    ]
}